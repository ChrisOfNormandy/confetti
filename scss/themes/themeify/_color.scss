@use 'sass:color';
@use 'sass:math';
@use "../../coloring/color" as coloring;
@use "../../interactive/cursors" as cursors;

@mixin apply-hvr-clr($clr) {
    &.hvr {
        @include cursors.hoverable() {
            @if coloring.useBlackFont($clr) {
                color: coloring.monochrome($clr, -0.2);
            }

            @else {
                color: coloring.monochrome($clr, 0.2);
            }
        }
    }
}

@mixin useFontColor($color) {
    color: $color;
    @include apply-hvr-clr($color);
}

@mixin apply($name, $clr) {
    @if $clr !=null {
        .c-#{$name} {
            @include useFontColor($clr);
        }

        .c-#{$name}-c {
            @include useFontColor(coloring.compliment($clr));
        }

        .c-#{$name}-i {
            @include useFontColor(color.invert($clr));
        }

        @for $i from 1 to 10 {
            $n: math.div($i, 10);

            .c-#{$name}-d#{$i} {
                @include useFontColor(coloring.monochrome($clr, -1 * $n));
            }

            .c-#{$name}-l#{$i} {
                @include useFontColor(coloring.monochrome($clr, $n));
            }

            $iClr: color.invert($clr);

            .c-#{$name}-d#{$i}-c {
                @include useFontColor(coloring.monochrome($iClr, -1 * $n));
            }

            .c-#{$name}-l#{$i}-c {
                @include useFontColor(coloring.monochrome($iClr, $n));
            }

            $cClr: coloring.compliment($clr);

            .c-#{$name}-d#{$i}-i {
                @include useFontColor(coloring.monochrome($cClr, -1 * $n));
            }

            .c-#{$name}-l#{$i}-i {
                @include useFontColor(coloring.monochrome($cClr, $n));
            }
        }
    }
}